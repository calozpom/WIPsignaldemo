<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TaskRouter OmniChannel Contact Center</title>
  <link href='https://fonts.googleapis.com/css?family=Raleway:400,300,500' rel='stylesheet' type='text/css'>
  <link rel="stylesheet" href="css/foundationz.css" />
  <link href="fonts/foundation-icons/foundation-icons.css" rel="stylesheet" type="text/css" />
  <link rel="stylesheet" type="text/css" href="css/normalize.css" />
  <!--<link rel="stylesheet" type="text/css" href="fonts/foundation-icons">-->
  <link rel="stylesheet" type="text/css" href="//cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.1/animate.min.css" />
  <link href="css/stylez.css" rel="stylesheet" />
  <script src="js/modernizr.custom.js"></script>
</head>
<body class="fadeIn animated">
  <div class="container">
    <div class="content-body">

      <div id="dashboard-body">
        <div class="row" id="addToThis"> 
        <a href='#' class='button success radius' onclick='vueMaster.$refs.testref.add()'><i class='fi fi-check'></i>add a message</a>
        <a href='#' class='button success radius' onclick='vueMaster.$refs.testref.removeTask()'><i class='fi fi-check'></i>remove a task</a>
          <div id="vue-test">
            <vue-test ref="testref"></vue-test>
          </div>       
        </div>
      </div>
    </div>
  </div>



  <script src="js/vendor/jquery.js"></script>
  <script src="js/foundation.min.js"></script>
  <script src="js/foundation/foundation.util.motion.js"></script>
  <script src="js/foundation/foundation.util.mediaQuery.js"></script>
  <script src="js/menucustom.js" type="text/javascript"></script>
  <script>        $(document).foundation(); </script>
  <script src="https://www.gstatic.com/firebasejs/3.9.0/firebase.js"></script>


  <script type="text/javascript" src="//media.twiliocdn.com/taskrouter/js/v1.6/taskrouter.min.js"></script>
  <script type="text/javascript" src="https://assets.zendesk.com/apps/sdk/2.0/zaf_sdk.js"></script>

  <script src="js/al-twilio-helper-funcs.js" type="text/javascript"></script>
  <script src="https://unpkg.com/vue"></script>
  <script src="https://unpkg.com/vuefire/dist/vuefire.js"></script>
  <script src="js/vueAgentComponents.js" type="text/javascript"></script>



  <script>
    function registerTaskRouterCallbacks() {
      worker.on('ready', function(worker) {
        console.log("Successfully registered as: " + worker.friendlyName);
        console.log("Current activity is: " + worker.activityName);
          console.log(worker.sid);             // 'WKxxx'
          console.log(worker.available);       // false


        });



      worker.on('activity.update', function(worker) {
        console.log("Worker activity changed to: " + worker.activityName);
        updateStatusMenu(worker.activityName);
      });

      worker.on("reservation.created", function(reservation) {
        console.log("new reservation");
        newTask(reservation);     
        myFirebase.child(reservation.task.sid).on("value", function(dataSnapshot) {
         updateTask(reservation,dataSnapshot);
         $("#taskDiv"+reservation.task.sid).fadeIn();
         zendeskClient.invoke('instances.create', {
          location: 'modal',
          url: 'https://twiliozendeskcc.herokuapp.com/reservationmodal?reservationSid='+reservation.sid+'&taskSid='+reservation.task.sid
        }).then(function(modalContext) {
          window.modalClient = zendeskClient.instance(modalContext['instances.create'][0].instanceGuid);
          modalClient.on('modal.close', function() {
          });
        });
      });
      });

      worker.on("reservation.accepted", function(reservation) {
        modalClient.invoke('destroy');
        console.log("Reservation " + reservation.task.sid + " accepted!");
        var replacementText = "Task: " + taskrouterGlobals[reservation.task.sid].full_name;
        if (taskrouterGlobals[reservation.task.sid]['address_street']) {
          replacementText += "<br /> " + taskrouterGlobals[reservation.task.sid]['address_street'] + ", " + taskrouterGlobals[reservation.task.sid]['address_city'];
        }
        replacementText += "<a href='#' id='completeTask"+reservation.task.sid+"' onClick='completeTask(\"" + reservation.task.sid+"\"); return false;'><span class='label radius success right'>Complete</span></a>";
        $("#task"+reservation.task.sid+"title").html(replacementText);
        /*var completeButton=document.getElementById('completeTask'+reservation.task.sid);
        completeButton.onclick = function(){
            console.log("trying to complete task");
            completeTask(reservation);
          };*/
          myFirebase.child(reservation.task.sid).off();
          myFirebase.child(reservation.task.sid).on("value", function(dataSnapshot) {
           updateTask(reservation);
         });

        });

      worker.on("reservation.rejected", function(reservation) {
        console.log("Reservation " + reservation.task.sid + " rejected!");
      });

      worker.on("reservation.timeout", function(reservation) {
        console.log("Reservation " + reservation.task.sid + " timed out!");
        var element = document.getElementById("taskDiv"+reservation.task.sid);
        element.parentNode.removeChild(element);
      });

      worker.on("reservation.canceled", function(reservation) {
        console.log("Reservation " + reservation.task.sid + " canceled!");
      });
      
    }

    window.onload = function() {
        // We use jQuery to make an Ajax request to the server to retrieve our 
        // Access Token
        $.getJSON('/token', function(data) {

          console.log(data.token);
          window.worker = new Twilio.TaskRouter.Worker(data.token);
          window.taskrouterGlobals = {};
          registerTaskRouterCallbacks();
          window.zendeskClient = ZAFClient.init();
          zendeskClient.invoke('resize', { width: '100%', height: '600px' });


        });





      }




    function getHTMLforTask(reservation,dataSnapshot) {
      var htmlToAdd ="";
      console.log("getting html for task");



      var reservationData = myFirebase.child(reservation.task.sid);

      reservationData.once("value", function(snapshot) {
          // The callback function will get called twice, once for "fred" and once for "barney"
          snapshot.forEach(function(childSnapshot) {
            var childData = childSnapshot.val();
            htmlToAdd +="<div class='row'><div class='message-dashboard'><div class='small-2 columns'>";
            
            if (childData['from'] == "me") {
              htmlToAdd += "<div class='profilePicMe"+reservation.task.sid+"'><img src='";
              htmlToAdd+="https://twiliozendeskcc.herokuapp.com/img/al.jpg";
              htmlToAdd +="' alt='profile' /></div></div> <div class='small-10 columns'><div class='message-desc'>";
              htmlToAdd += "<b><div class='messageNameMe"+reservation.task.sid+"'>"
              htmlToAdd+=childData['from'];


            }
            else if (childData['from'] == "MeyaBot") {
              htmlToAdd += "<div class='profilePicMeya"+reservation.task.sid+"'><img src='";
              htmlToAdd+="https://twiliozendeskcc.herokuapp.com/img/meya.png";
              htmlToAdd +="' alt='profile' /></div></div> <div class='small-10 columns'><div class='message-desc'>";
              htmlToAdd += "<b><div class='messageNameMeya"+reservation.task.sid+"'>"
              htmlToAdd+=childData['from'];



            }
            else {
              htmlToAdd += "<div class='profilePicSender"+reservation.task.sid+"'><img src='";
              htmlToAdd+=taskrouterGlobals[reservation.task.sid].profile_pic
              htmlToAdd +="' alt='profile' /></div></div> <div class='small-10 columns'><div class='message-desc'>";
              htmlToAdd += "<b><div class='messageNameSender"+reservation.task.sid+"'>"
              htmlToAdd += taskrouterGlobals[reservation.task.sid].first_name;





            }
            htmlToAdd+="</div></b>  "+ childData['message'] +"<span class='right green'>now</span>";
            htmlToAdd += "</div></div></div></div>";
            //console.log(htmlToAdd);
          });
        });
      console.log("testing if there should be a text box for task with status " + reservation.task.assignmentStatus);
      if(reservation.task.assignmentStatus == "assigned") {
        console.log("add text box now");
        htmlToAdd+="<form><input type='text' id='messageText"+reservation.task.sid+"' placeholder='Reply...'><a href='#' class='button success radius' id='messageSend"+reservation.task.sid+"'><i class='fi fi-check'></i>Send</a></form>";
      }

      return htmlToAdd;
    }
    function newTask(reservation) {
        //TODO:refactor this using vue. And make it work cross channel. 
        console.log("new task");
        taskrouterGlobals[reservation.task.sid]={};
        taskrouterGlobals[reservation.task.sid].first_name = reservation.task.attributes.message_from;
        taskrouterGlobals[reservation.task.sid].full_name = reservation.task.attributes.message_from;
        taskrouterGlobals[reservation.task.sid].profile_pic = "https://twiliozendeskcc.herokuapp.com/img/unknownavatar.jpeg";
        var htmlToAdd="<div class='small-12 columns' id='taskDiv"+reservation.task.sid+"'>";
        var id = reservation.task.attributes.message_from;
        id = id.replace('Messenger:','');
        myFirebase.child('profiles').child(reservation.task.sid).once("value", function(snapshot) {
          // The callback function will get called twice, once for "fred" and once for "barney"
          updateTaskTitle(reservation.task.sid, snapshot);
        });
        htmlToAdd += "<div class='custom-panel-heading'>";
        htmlToAdd += "<h5 class='white' id='task" + reservation.task.sid + "title'>" +"<div id='titleText" + reservation.task.sid+"'>Task:" + reservation.task.attributes.message_from + "</div><span class='label radius alert right'>Reject</span>&nbsp;<a href='#' id='acceptTask"+reservation.task.sid+"' onClick='acceptTask(\"" + reservation.task.sid+"\", \"" + reservation.sid +"\"); return false;'><span class='label radius success right'>Accept</span></a></h5></div>";
        htmlToAdd += "<div class='custom-panel-details' id='messageDiv"+reservation.task.sid+"'>";
        htmlToAdd += "</div>";
        htmlToAdd += "</div>";

        var divToAddTo=document.getElementById('addToThis');
        divToAddTo.innerHTML = divToAddTo.innerHTML + htmlToAdd;
        $("#taskDiv"+reservation.task.sid).hide();   

      }
      function updateTaskTitle(sid, snapshot) {
        childData = snapshot.val();
        titleDiv = document.getElementById('titleText'+sid);
        var titleText = "Task: " + childData['first_name'] + " " + childData['last_name'];
        if (childData['address_street']) {
          taskrouterGlobals[sid].address_street = childData['address_street'];
          taskrouterGlobals[sid].address_city = childData['address_city'];
          titleText += "<br /> " + childData['address_street'] + ", " + childData['address_city'];
        }
        titleDiv.innerHTML = titleText;
        $('.messageNameSender'+sid).each(function(i, obj) {
          obj.innerHTML=childData['first_name'];
        });
        $('.profilePicSender'+sid).each(function(i, obj) {
          obj.innerHTML="<img src='"+childData['profile_pic']+"' alt='profile' />";
        });
        taskrouterGlobals[sid].first_name = childData['first_name'];
        taskrouterGlobals[sid].profile_pic = childData['profile_pic'];
        taskrouterGlobals[sid].full_name = childData['first_name'] + " " + childData['last_name'];
        

    //test



  }


  function updateTask(reservation,dataSnapshot) {
    console.log("trying to update task");
    var htmlToAdd = getHTMLforTask(reservation,dataSnapshot);
    console.log("wanting to replace with this");
    console.log(htmlToAdd);
    var divToReplace=document.getElementById('messageDiv'+reservation.task.sid);
    divToReplace.innerHTML = htmlToAdd; 
    if(reservation.task.assignmentStatus == "assigned") {
      console.log("attach on click event to button");
      var sendButton=document.getElementById('messageSend'+reservation.task.sid);
      sendButton.onclick = function(){
        var messageText=document.getElementById('messageText'+reservation.task.sid).value;
        console.log(messageText);
        sendSMS(reservation.task.attributes.message_to,reservation.task.attributes.message_from,reservation.task.sid,messageText);
      };  
      htmlToAdd+="<form><input type='text' placeholder='Reply...'><a href='#' class='button success radius'><i class='fi fi-check'></i>Send</a></form>";
    }    
  }




</script>
<template id="chatTask" >
<div>
  <div class='small-12 columns' v-for="task in taskList">
    <div class='custom-panel-heading'>
      <h5 class='white'>
        <div id='titleText'>
          Task: {{task.sid}}
        </div>
        <span class='label radius alert right'>Reject</span>&nbsp;
        <a href='#' @click="accept(task.task_sid)">
          <span class='label radius success right'>Accept</span>
        </a>
      </h5>
    </div>
    <div class='custom-panel-details'>
      <template v-for="message in task.messageList">
        <div class='row'>
          <div class='message-dashboard'>
            <div class='small-2 columns'>
              <div class='profilePic'>
                <img src='https://twiliozendeskcc.herokuapp.com/img/al.jpg' alt='profile' />
              </div>
            </div> 
            <div class='small-10 columns'>
            <div class='message-desc'>
                <div class='messageName'>
                  <b>{{message.from}}</b>
                </div>
                {{message.content}}
                <span class='right green'>now</span>
              </div>
            </div>
          </div>
        </div>
      </template>
      <form><input type='text' placeholder='Reply...'><a href='#' class='button success radius' @click="add"><i class='fi fi-check'></i>Send</a></form>
    </div>
  </div>
  </div>
</template>




<script>
/* [{task1,{message1, message2}}, {task2, {message1, message2}}] */ 
//window.myFirebase = new Firebase("https://taskrouter.firebaseio.com/");
var config = {
    apiKey: "AIzaSyDjqMYOFKIVU2z7RkkhxbY9DoLCv82sD1Y",
    authDomain: "taskrouter.firebaseapp.com",
    databaseURL: "https://taskrouter.firebaseio.com",
    projectId: "firebase-taskrouter",
    storageBucket: "firebase-taskrouter.appspot.com",
    messagingSenderId: "132789793599"
  };
  firebase.initializeApp(config);

window.myFirebase = firebase.database().ref();


Vue.component('vue-test', {
  template: '#chatTask',
  data: function() {
   return {
   taskList: []

  }

},
methods: {
  add: function() {
    this.taskList[0].messageList.push({from:'meya', content:'15'});
  },
  accept: function(sid) {
    console.log("calling accept method with sid " + sid);
  },
  removeTask: function() {
    this.taskList.pop();
  },
  update: function(newTaskList) {
    console.log("updating vue database");
    this.taskList = newTaskList;
  }

}
})


window.vueMaster = new Vue({
  el: '#vue-test'
  

})

window.taskListDB = myFirebase.ref("taskList/WKc9fb44a68905d751dded01581d3fe50c");
//technically vuefire should do this but it doesn't seem to work reliably and is impossible to debug
taskListDB.on('value', function(snapshot) {
  console.log('task List structure changed');
  console.log(JSON.stringify(snapshot.val()));
  vueMaster.$refs.testref.update()(snapshot.val());
});







</script>



</body>
</html>
